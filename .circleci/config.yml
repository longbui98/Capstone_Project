version: 2.1

orbs:
    aws-cli: circleci/aws-cli@4.1.2
    kubernetes: circleci/kubernetes@1.3
commands:
  delete-cluster:
    description: Delete cluster in case of failing when creating cluster in ECS
    steps:
      - run:
          name: Delete cluster
          when: on_fail
          command:  /.eksctl delete cluster --region=us-east-1 --name=capstone-project-cluster
            
jobs:
  linting-code:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }} # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv ~/.devops
            . ~/.devops/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ~/.devops
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run: # run lint!
          name: run lint
          command: |
            . ~/.devops/bin/activate
            make lint

  build_deploy_docker:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Create docker image
          command: |
            docker build -t longbui-api .
      - run:
          name: Archive docker image
          command: |
            docker save -o api_image.tar longbui-api
      - persist_to_workspace:
          root: .
          paths: ./api_image.tar

  publish_docker_image:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker
      - aws-cli/setup
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load image from archive
          command: docker load -i /tmp/workspace/api_image.tar
      - run:
          name: Create ECR and publish docker image to ECR
          command: bash bash_script/create_ecr.sh

  create_kubernets_cluster:
    docker:
      - image: python:3.7.3-stretch
    steps:
      - checkout
      - aws-cli/setup
      - kubernetes/install-kubectl
      - run:
          name: Install kubernetes utilities
          command: make install_kubernetes_utility
      - run:
          name: Create cluster
          command: bash bash_script/create_cluster.sh
      - delete-cluster
            
  deploy-app:
    docker:
      - image: python:3.7.3-stretch
    steps:
      - checkout
      - aws-cli/setup
      - kubernetes/install-kubectl
      - run:
          name: Deploy application to ECS
          command: |
            aws eks update-kubeconfig --region us-east-1 --name capstone-project-cluster
            bash bash_script/deploy_app.sh

workflows:
  default:
    jobs:
      - linting-code
      - build_deploy_docker:
          requires: [linting-code]
      - publish_docker_image:
          requires: [build_deploy_docker]
      - create_kubernets_cluster:
          requires: [publish_docker_image]
      - deploy-app:
          requires: [create_kubernets_cluster]